# Nombre de la aplicación
spring.application.name=PodStream

# Configuración de la conexión a la base de datos MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/podstream
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuración de Hibernate y JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Configuración de la conexión SMTP
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.debug=true

# Configuración de HikariCP (pool de conexiones)

# Número máximo de conexiones en el pool. Este valor debe ser ajustado
# según la carga esperada de la aplicación y las capacidades de la base de datos.
spring.datasource.hikari.maximum-pool-size=20

# Número mínimo de conexiones que se mantendrán en el pool,
# incluso si están inactivas. Este valor debe ser ajustado
# para balancear la latencia y el uso de recursos.
spring.datasource.hikari.minimum-idle=5

# Tiempo máximo (en milisegundos) que una conexión puede estar inactiva
# en el pool antes de ser eliminada. Un valor más bajo puede liberar recursos,
# pero puede aumentar la latencia para nuevas conexiones.
spring.datasource.hikari.idle-timeout=60000

# Tiempo máximo (en milisegundos) que una solicitud de conexión
# puede estar esperando en la cola antes de lanzar una excepción.
# Este valor debe ser ajustado según la latencia aceptable para la aplicación.
spring.datasource.hikari.connection-timeout=30000

# Tiempo máximo de vida (en milisegundos) de una conexión en el pool.
# Después de este tiempo, la conexión será eliminada y reemplazada
# por una nueva. Esto ayuda a mitigar problemas de conexión a largo plazo.
spring.datasource.hikari.max-lifetime=1800000

# Configuración del servidor
server.address = 0.0.0.0
server.port=8088
server.forward-headers-strategy=native

# Configuración de Actuator y Prometheus
management.endpoints.web.exposure.include=health,info,metrics,prometheus,loggers
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=always
management.metrics.tags.application=${spring.application.name}

# Configuración de logging
debug=true
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG

# Configuración de Jira
jira.url=${JIRA_URL}
jira.username=${JIRA_USERNAME}
jira.api-token=${JIRA_API_TOKEN}
jira.project-key=${JIRA_PROJECT_KEY:POD}