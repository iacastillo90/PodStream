services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: podstream-app
    ports:
      - "8080:8080"
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - SPRING_ELASTICSEARCH_URIS=http://podstream-elasticsearch:9200
      - SPRING_REDIS_HOST=podstream-redis
      - SPRING_REDIS_PORT=6379
      - LOGSTASH_HOST=podstream-logstash
      - LOG_PATH=/var/log
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,prometheus,loggers
      - SPRING_DATASOURCE_URL=jdbc:mysql://podstream-mysql:3306/podstream
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
    networks:
      - app-network
      - elk-network
  mysql:
    image: mysql:8.0
    container_name: podstream-mysql
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_DATABASE=podstream
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  redis:
    image: redis:7.0
    container_name: podstream-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: podstream-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -E '\"status\":\"(green|yellow)\"'"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 30s
    networks:
      - elk-network
  logstash:
    image: docker.elastic.co/logstash/logstash:8.8.0
    container_name: podstream-logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs:/var/log
    ports:
      - "5000:5000"
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - XPACK_MONITORING_ENABLED=true
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS=http://podstream-elasticsearch:9200
    networks:
      - elk-network
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: podstream-kibana
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk-network
  prometheus:
    image: prom/prometheus:v2.54.0
    container_name: podstream-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - app
    networks:
      - elk-network
  grafana:
    image: grafana/grafana:11.1.3
    container_name: podstream-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - elk-network
networks:
  app-network:
    driver: bridge
  elk-network:
    driver: bridge
volumes:
  es-data: